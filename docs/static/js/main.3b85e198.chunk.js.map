{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setSate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAqCeA,EAlCY,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAVY,SAACC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,GAE3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,QAK3C,SACI,uBACQC,KAAK,OACLC,MAAOT,EACPU,SAnBU,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAU,kCAAf,UACG,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHFO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECFwB,SAACA,GACzB,MAAyBd,mBAAS,CAC9BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAQ,CACJf,KAAMkB,EACNL,SAAS,SAItB,CAACpB,IAGGqB,EDjByBK,CAAa1B,GAAhCa,EAAb,EAAON,KAAca,EAArB,EAAqBA,QAErB,OACI,qCACI,oBAAIJ,UAAU,6BAAd,SAA6ChB,IAE5CoB,GAAW,mBAAGJ,UAAU,6BAAb,qBAEZ,qBAAKA,UAAU,uCAAf,SAGQH,EAAOJ,KAAK,SAACC,GAAD,OACR,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEkB/BgB,EA/BM,WAGjB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KASA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ2C,EAAWnB,KAAK,SAACT,GAAD,OACd,cAAC,EAAD,CAEEA,SAAUA,GADLA,Y,MCnB7B6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3b85e198.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport propTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n\r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubtmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2 ){\r\n            //llamar  setcategories\r\n            setCategories( cats => [inputValue, ...cats] );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubtmit }>\r\n            <input \r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                ></input>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: propTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default AddCategory;\r\n","\r\n\r\nexport const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=rLBIza7VGx0WY9sYNHaHhpD1pWfGHiiW`;\r\n\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__lightSpeedInRight\">\r\n           <img src={url} alt={title}/>\r\n           <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data: images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__lightSpeedInRight\">{ category }</h3>\r\n\r\n            {loading && <p className=\"animate__lightSpeedInRight\">Loading</p>}\r\n\r\n            <div className=\"card-grid animate__lightSpeedInRight\">\r\n                \r\n                {\r\n                    images.map( (img) => (\r\n                        <GifGridItem key={img.id} {...img }/>\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/GetGifs';\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setSate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        \r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setSate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n        \r\n    }, [category])\r\n\r\n\r\n    return state;\r\n\r\n\r\n}","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    // const categories = ['One Punch', 'Samurai X', 'Dragon ball'];\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n\r\n    // const handleApp = () =>{\r\n    //     setCategories([...categories, 'Naruto']);\r\n    // }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( (category) => \r\n                     (<GifGrid \r\n                        key={category}\r\n                        category={category} \r\n                    />))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n//import AddCategory from './components/AddCategory';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}